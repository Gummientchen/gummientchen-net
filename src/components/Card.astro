---
export interface Props {
  service: string;
  gamertag: string;
  description: string;
  svg: string;
  buttonhref?: string;
}

const { service, gamertag, description, svg, buttonhref = false } = Astro.props;

// import fs from 'node:fs/promises';

// const url = new URL(`${svg}`, import.meta.url);
// const svgtext = await fs.readFile(url, 'utf-8');

const { default: svgtext } = await import(`../images/${svg}.svg?raw`);
const { default: arrow } = await import("../images/arrow-right.svg?raw");
---

<div class="card">
  <div set:html={svgtext}></div>
  <h2>{service}: {gamertag}</h2>
  <p>{description}</p>
  {
    buttonhref && (
      <a class="button" target="_blank" rel="noopener" href={buttonhref}>
        {service} Profile
        <span set:html={arrow} />
      </a>
    )
  }
</div>

<style>
  .card {
    background: #fff;
    -webkit-box-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.14),
      0 3px 3px -2px rgba(0, 0, 0, 0.2), 0 1px 8px 0 rgba(0, 0, 0, 0.12);
    box-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.14),
      0 3px 3px -2px rgba(0, 0, 0, 0.2), 0 1px 8px 0 rgba(0, 0, 0, 0.12);
    border-radius: 2px;
    overflow: hidden;
    -webkit-transform: scale(1);
    transform: scale(1);
    -webkit-transition: -webkit-transform 0.1s ease-in-out;
    transition: -webkit-transform 0.1s ease-in-out;
    transition: transform 0.1s ease-in-out;
    transition: transform 0.1s ease-in-out, -webkit-transform 0.1s ease-in-out;
    position: relative;
  }
  .card p {
    letter-spacing: 0.45px;
    margin-bottom: 4em;
  }
  .card h2,
  .card p {
    padding: 0 10px;
    font-weight: 300;
  }
  .card a.button {
    position: absolute;
    bottom: 0;
    left: 0;
  }
  .card > svg {
    width: 100%;
    height: auto;
    overflow: hidden;
  }
</style>
