---
export interface Props {
  heading: string;
  subheading: string;
  minimal?: string;
}

const { heading, subheading, minimal } = Astro.props;
---

{
  minimal ? (
    <header id="header" class="minimal">
      <h1>{heading}</h1>
      <h2>{subheading}</h2>
    </header>
  ) : (
    <header id="header">
      <h1>{heading}</h1>
      <h2>{subheading}</h2>
    </header>
  )
}

<style>
  header {
    height: clamp(17rem, 50vw, 70rem);

    position: sticky;
    top: 0;

    z-index: 0;

    animation: fade 1s linear;
    animation-play-state: paused;
    animation-delay: calc(var(--scroll) * -1s);
  }

  header:before {
    content: "";
    position: absolute;
    inset: 0;
    z-index: -1;
    background-image: url("../images/bg/nightsky.svg");
    background-position: 0% 40%;
    background-size: cover;
    filter: blur(3px);
  }

  header:after {
    content: "";
    position: absolute;
    inset: 0;
    opacity: 1;
    z-index: -1;
    background-image: svg-load("../images/logo.svg");
    background-position: center 25%;
    background-size: cover;
    background-repeat: no-repeat;
    /* filter: brightness(var(--header-image-brightness-inner)) blur(4px)
      saturate(var(--header-image-saturation-inner))
      hue-rotate(var(--header-image-hue-inner)); */
  }

  header.minimal {
    background: none;
    height: auto;

    --header-image-position-inner: var(--header-position-hue, 40%);
    --header-image-hue-inner: var(--header-image-hue, 0deg);
    --header-image-brightness-inner: var(--header-image-brightness, 0.5);
    --header-image-saturation-inner: var(--header-image-saturation, 1.25);
  }

  header.minimal:after {
    content: "";
    position: absolute;
    inset: 0;
    z-index: -1;
    background-image: url("../images/bg/nightsky.svg");
    background-position: 0% var(--header-image-position-inner);
    background-size: cover;
    filter: brightness(var(--header-image-brightness-inner)) blur(4px)
      saturate(var(--header-image-saturation-inner))
      hue-rotate(var(--header-image-hue-inner));
  }

  header.minimal:before {
    content: "";
    background: none;
    filter: none;
  }

  @keyframes fade {
    to {
      opacity: 0;
    }
  }

  h1,
  h2 {
    text-align: center;
    margin: 0;
    text-shadow: 0px 0px 10px rgba(0, 0, 0, 1);
    color: var(--header-font-color);

    /* -webkit-text-stroke: 1px var(--color-gray-400);
    text-stroke: 1px var(--color-gray-400); */
  }

  h1 {
    font-size: clamp(1.8rem, 4vw, 8rem);
    padding-block-start: 1.5em;
    padding-block-end: 0.25em;
    padding-inline: 1em;

    font-weight: 600;
    line-height: 1.2;
  }

  h2 {
    font-size: clamp(1.2rem, 3vw, 5rem);
    padding-block-end: 1em;
    padding-inline: 1em;
    font-weight: 500;
    line-height: 1.2;
  }

  @media (min-width: 15rem) {
    header:after {
      background-position: center 15%;
    }
  }

  @media (min-width: 33rem) {
    header:after {
      background-position: center 45%;
    }

    h1 {
      padding-block-start: 1em;
    }
  }
  @media (min-width: 66rem) {
    header {
      grid-column: 1 / span 3;
      overflow: hidden;
      -webkit-box-sizing: border-box;
      box-sizing: border-box;
    }

    h1 {
      padding-block-start: 0.75em;
    }
  }
</style>
