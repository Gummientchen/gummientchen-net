---
export interface Props {
  heading: string;
  subheading: string;
}

const { heading, subheading } = Astro.props;
---

<header id="header">
  <h1>{heading}</h1>
  <h2>{subheading}</h2>
</header>

<style>
  header {
    background-repeat: no-repeat;
    background-position: center 15%;
    background-size: cover;
    background-color: var(--color-gray-700);
    background-image: svg-load("../images/logo.svg"),
      linear-gradient(
        0deg,
        var(--main-bg-color) 5%,
        hsla(0, 0%, 100%, 0.5) 100%
      );
    height: clamp(20rem, 50vw, 70rem);

    position: sticky;
    top: 0;

    z-index: 0;

    animation: fade 1s linear;
    animation-play-state: paused;
    animation-delay: calc(var(--scroll) * -1s);
  }

  @keyframes fade {
    to {
      opacity: 0;
    }
  }

  @media (prefers-color-scheme: dark) {
    header {
      background-color: var(--color-gray-700);

      position: sticky;
      top: 0;
    }

    h1,
    h2 {
      --header-font-color: var(--color-gray-100);
    }
  }

  h1,
  h2 {
    text-align: center;
    margin: 0;
  }

  h1 {
    font-size: clamp(1.8rem, 4vw, 8rem);
    padding-block-start: 1.5em;
    padding-block-end: 0.25em;
    padding-inline: 1em;
    color: var(--header-font-color);
    font-weight: 600;
    line-height: 1.2;
  }

  h2 {
    font-size: clamp(1.2rem, 3vw, 5rem);
    padding-block-end: 1em;
    padding-inline: 1em;
    color: var(--header-font-color);
    font-weight: 500;
    line-height: 1.2;
  }

  @media (min-width: 15rem) {
    header {
      background-position: center 15%;
    }
  }

  @media (min-width: 33rem) {
    header {
      background-position: center 45%;
    }

    h1 {
      padding-block-start: 1em;
    }
  }
  @media (min-width: 66rem) {
    header {
      grid-column: 1 / span 3;
      overflow: hidden;
      -webkit-box-sizing: border-box;
      box-sizing: border-box;
    }

    h1 {
      padding-block-start: 0.75em;
    }
  }
</style>
