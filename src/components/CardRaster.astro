---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import { getImage } from "astro:assets";

export interface Props {
  src: string;
  svgbackground?: string;
  filetype: string;
}

const { src, svgbackground = "#000", filetype = "png" } = Astro.props;

const imageSource = "/src/images/" + src + "." + filetype;

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/images/*.{jpeg,jpg,png,gif,webp,avif}"
);
if (!images[imageSource]) {
  throw new Error(
    `"${imageSource}" does not exist in glob: "src/images/*.{jpeg,jpg,png,gif,webp,avif}"`
  );
}

const iSrc = images[imageSource]();

const optimizedBackgroundImage = await getImage({ src: images[imageSource]() });
---

<div
  style={`background-color: ${svgbackground} ;aspect-ratio: 16/9; background-image: url(${optimizedBackgroundImage.src}); background-size: contain; background-repeat: no-repeat;`}
  transition:name={src}
>
</div>

<style>
  div {
    padding: 0;
    margin: 0;
    line-height: 0;
  }
</style>
